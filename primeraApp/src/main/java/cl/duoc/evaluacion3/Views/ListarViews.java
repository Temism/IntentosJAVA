/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package cl.duoc.evaluacion3.Views;


import cl.duoc.evaluacion3.DTO.MovieDTO;
import cl.duoc.evaluacion3.Services.IMovie;
import cl.duoc.evaluacion3.ServicesImpls.MovieService;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;


/**
 *
 * @author Marco
 */
public class ListarViews extends javax.swing.JInternalFrame {
    private static IMovie servicio ;
    public ListarViews() {
        initComponents();
        if (servicio == null) {
            servicio = new MovieService();
        }
        CargarTabla(this.servicio.listar());
        
    }
    public void CargarTabla(List<MovieDTO> lista){
        JTable tabla = TablaPeliculas;
        tabla.selectAll();
        tabla.clearSelection();
        DefaultTableModel model = (DefaultTableModel) tabla.getModel();
        

        for (MovieDTO m : lista)
        {
            model.addRow(new Object[]{
                m.getID(),
                m.getTitulo(),
                m.getAnio(),
                m.getDirector(),
                m.getDuracion(),
                m.getGenero()
                
            });
        }  
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TablaPeliculas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        SeleccionGenero = new javax.swing.JComboBox<>();
        TxtAnio = new javax.swing.JTextField();
        BFiltrar = new javax.swing.JButton();
        BActualizar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Listado de Peliculas");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        TablaPeliculas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Titulo", "Año", "Director", "duracion", "Genero"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TablaPeliculas);

        jLabel1.setText("Genero");

        jLabel2.setText("Año");

        SeleccionGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Seleccione Genero -", "Drama", "Comedia", "Accion", "Romance ", "Suspenso", "Terror" }));
        SeleccionGenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeleccionGeneroActionPerformed(evt);
            }
        });

        TxtAnio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtAnioActionPerformed(evt);
            }
        });
        TxtAnio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtAnioKeyTyped(evt);
            }
        });

        BFiltrar.setText("Filtrar");
        BFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BFiltrarActionPerformed(evt);
            }
        });

        BActualizar.setText("Limpiar");
        BActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(SeleccionGenero, 0, 254, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(TxtAnio)))
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                    .addComponent(BFiltrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(64, 64, 64))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SeleccionGenero)
                    .addComponent(BFiltrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TxtAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BActualizar))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getAccessibleContext().setAccessibleName("ListadoPeliculas");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void TxtAnioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtAnioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtAnioActionPerformed
    TableRowSorter<TableModel> trs  ;
    private void BFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BFiltrarActionPerformed
        
        if (SeleccionGenero.getSelectedIndex() != 0 || !TxtAnio.getText().isEmpty()) {
            trs = new TableRowSorter<>(TablaPeliculas.getModel());
            TablaPeliculas.setRowSorter(trs);
            RowFilter<TableModel, Object> filtro1 = null;
            if (SeleccionGenero.getSelectedIndex() != 0) {
                filtro1 = RowFilter.regexFilter(SeleccionGenero.getSelectedItem().toString(), 5);
            }
            RowFilter<TableModel, Object> filtro2 = null;
            if (!TxtAnio.getText().isEmpty()) {
                filtro2 = RowFilter.regexFilter(TxtAnio.getText(), 2);
            }
            if (filtro1 != null && filtro2 != null) {
                List<RowFilter<TableModel, Object>> filtros = List.of(filtro1, filtro2);
                trs.setRowFilter(RowFilter.andFilter(filtros));
            } else if (filtro1 != null) {
                trs.setRowFilter(filtro1); 
            } else if (filtro2 != null) {
                trs.setRowFilter(filtro2);
            } else {
                TablaPeliculas.setRowSorter(null);
                trs.setRowFilter(null);
        }
    }   
   
    }//GEN-LAST:event_BFiltrarActionPerformed
    
    private void BActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BActualizarActionPerformed
        // TODO add your handling code here: 
        if (SeleccionGenero.getSelectedIndex() != 0 || !TxtAnio.getText().isEmpty()) {
            SeleccionGenero.setSelectedIndex(0);
            TxtAnio.setText("");
            trs.setRowFilter(null);
        }else{
            JOptionPane.showMessageDialog(null, "Filtros de busqueda vacios", "", JOptionPane.PLAIN_MESSAGE);
        }    
    }//GEN-LAST:event_BActualizarActionPerformed

    private void TxtAnioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtAnioKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtAnioKeyTyped

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameOpened

    private void SeleccionGeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeleccionGeneroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SeleccionGeneroActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BActualizar;
    private javax.swing.JButton BFiltrar;
    private javax.swing.JComboBox<String> SeleccionGenero;
    private javax.swing.JTable TablaPeliculas;
    private javax.swing.JTextField TxtAnio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
